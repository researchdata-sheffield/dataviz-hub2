{"version":3,"sources":["webpack://datavizhub-tuos/./src/components/shared/shareButtons.jsx","webpack://datavizhub-tuos/./src/templates/docs/docsTemplate.jsx","webpack://datavizhub-tuos/./src/utils/hooks/trackTableOfContent.jsx"],"names":["shareLinks","tableOfContent","renderItem","githubLink","shareLink","shareMessage","className","style","height","left","cascade","delay","duration","maxWidth","overflow","aria-label","Twitter","solid","small","message","link","Facebook","Mail","subject","Linkedin","href","target","rel","data-tip","data-for","offset","top","id","backgroundColor","Object","keys","length","items","map","mdx","data","pageContext","frontmatter","title","date","author","disableTOC","prev","next","getShareLinks","d3","d","includes","useScript","withPrefix","tableOfContents","trackTableOfContent","item","key","url","renderSubItem","keywords","tag","category","a","name","join","description","twitterImage","thumbnail","childImageSharp","gatsbyImageData","twitterImageAlt","async","src","charset","type","minHeight","authors","G","image","avatar","idx","fields","readingTime","text","minWidth","color","borderBottom","displayTags","tocSelector","itemSelector","handleClassList","element","tagName","substring","el","parentElement","rm","classList","remove","add","useEffect","handleTOC","observer","IntersectionObserver","entries","forEach","entry","getAttribute","document","querySelector","intersectionRatio","querySelectorAll","observe","addEventListener","removeEventListener"],"mappings":"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","file":"component---src-templates-docs-docs-template-jsx-01c91c25d4dc92af3def.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Twitter, Facebook, Mail, Linkedin } from \"react-social-sharing\";\nimport { RiEditBoxLine } from \"react-icons/ri\";\nimport ReactTooltip from \"react-tooltip\";\nimport Fade from \"react-reveal/Fade\";\n\n/**\n * @param {Object} shareLinks an object contains all information for sharing\n * @param {boolean} tableOfContent either receive false or an object of tableOfContent for the MDX document\n * @param {function} renderItem a function which takes an item and returns HTML (how to display items)\n */\nconst shareButtons = ({ shareLinks, tableOfContent, renderItem }) => {\n  const { githubLink, shareLink, shareMessage } = shareLinks;\n\n  return (\n    <>\n      <div\n        className=\"left-0 top-0 sticky hidden lg:block z-10\"\n        style={{ height: \"max-content\" }}\n      >\n        <Fade left cascade delay={1000} duration={1300}>\n          <div\n            className=\"mt-28 flex flex-col text-xs\"\n            style={{ maxWidth: \"40px\", height: \"0\", overflow: \"visible\" }}\n            aria-label=\"Top share buttons\"\n          >\n            <Twitter\n              className=\"greyScale-100 hover:greyScale-0 transition duration-500\"\n              solid\n              small\n              message={shareMessage}\n              link={shareLink}\n            />\n            <Facebook\n              className=\"greyScale-100 hover:greyScale-0 transition duration-500\"\n              solid\n              small\n              link={shareLink}\n            />\n            <Mail\n              className=\"hover:bg-red-600 transition duration-500\"\n              solid\n              small\n              subject={shareMessage}\n              link={shareLink}\n            />\n            <Linkedin\n              className=\"greyScale-100 hover:greyScale-0 transition duration-500\"\n              solid\n              small\n              message={shareMessage}\n              link={shareLink}\n            />\n            <hr className=\"my-3\" />\n            <a\n              href={githubLink}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              data-tip=\"\"\n              data-for=\"share_editpost_1\"\n              offset={{ top: 100, left: 100 }}\n            >\n              <div className=\"m-2 mt-1 bg-transparent text-black flex justify-center rounded-md text-xl transition duration-500\">\n                <RiEditBoxLine />\n              </div>\n            </a>\n\n            <ReactTooltip id=\"share_editpost_1\">\n              Edit this page on GitHub\n            </ReactTooltip>\n          </div>\n        </Fade>\n      </div>\n\n      {/* mobile: table of content & share buttons */}\n      <div\n        className=\"w-full shadow-md flex flex-wrap lg:hidden focus:justify-center -mt-12 lg:mt-0\"\n        style={{ backgroundColor: \"#f3f3f3\" }}\n      >\n        <div\n          className={`${\n            tableOfContent && Object.keys(tableOfContent).length === 0\n              ? \"flex-row\"\n              : \"flex-col w-1/4\"\n          } flex text-sm justify-center items-center py-2 ml-10`}\n          style={{ maxWidth: \"50px\" }}\n          aria-label=\"Top mobile share buttons\"\n        >\n          <Twitter solid small message={shareMessage} link={shareLink} />\n          <Facebook solid small link={shareLink} />\n          <Mail\n            solid\n            small\n            className=\"bg-red-600\"\n            subject={shareMessage}\n            link={shareLink}\n          />\n          <Linkedin solid small message={shareMessage} link={shareLink} />\n          <a href={githubLink} target=\"_blank\" rel=\"noopener noreferrer\">\n            <div className=\"m-2 py-1 px-2 bg-gray-800 hover:bg-brand-blue text-white flex justify-center rounded-md text-xl\">\n              <RiEditBoxLine />\n            </div>\n          </a>\n        </div>\n        <div\n          className={` ${\n            tableOfContent && tableOfContent.items ? \"pt-8 pb-5\" : \"hidden\"\n          } mx-auto overflow-auto text-black lg:hidden px-2`}\n        >\n          {tableOfContent && tableOfContent.items && (\n            <p className=\"font-bold mb-3 pb-2 border-b-1 border-gray-300\">\n              TABLE OF CONTENTS\n            </p>\n          )}\n          {tableOfContent &&\n            tableOfContent.items &&\n            tableOfContent.items.map(renderItem)}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default shareButtons;\n\nshareButtons.propTypes = {\n  mdx: PropTypes.any\n};\n","// BASE\nimport React from \"react\";\nimport { graphql, withPrefix } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport { Helmet } from \"react-helmet\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nimport SEO from \"../../components/shared/seo\";\nimport PostPagination from \"../../components/blog/postPagination\";\nimport Comment from \"../../components/blog/comment\";\nimport ShareButtons from \"../../components/shared/shareButtons\";\n\n// MDX component\nimport CommonMdxProvider from \"../../components/shared/commonMdxProvider\";\nimport \"katex/dist/katex.min.css\";\n\n// Utils\nimport { useScript } from \"../../utils/hooks/useScript\";\nimport { getShareLinks } from \"../../utils/shared\";\nimport { trackTableOfContent } from \"../../utils/hooks/trackTableOfContent\";\n\nimport Fade from \"react-reveal/Fade\";\n\nconst docsTemplate = ({ data: { mdx }, pageContext }) => {\n  const { title, date, author, disableTOC } = mdx.frontmatter;\n  const { prev, next } = pageContext;\n\n  const shareLinks = getShareLinks(mdx);\n\n  // include d3 scripts\n  const d3 = mdx.frontmatter.d3 || null;\n  {\n    d3 &&\n      d3.map((d) => {\n        if (d.includes(\"https://\")) useScript(d, \"\", false);\n        // external script\n        else useScript(withPrefix(`d3/${d}`), \"\", false);\n      });\n  }\n\n  // enable/disable table of content\n  var tableOfContent;\n\n  if (disableTOC === true) {\n    tableOfContent = null;\n  } else {\n    tableOfContent = mdx.tableOfContents;\n    trackTableOfContent(`.TOC li a`, `.mdxBody`);\n  }\n\n  //Rendering table of content\n  const renderItem = (item) => (\n    <li key={item.title} className=\"pb-1 list-none\">\n      {/* Heading */}\n      <a href={item.url} className=\"inline-block\">\n        <p>{item.title}</p>\n      </a>\n      {/* Sub-heading */}\n      {item.items ? (\n        <ul className=\"pl-3\">{item.items.map(renderSubItem)}</ul>\n      ) : (\n        <></>\n      )}\n    </li>\n  );\n  const renderSubItem = (item) => (\n    <li key={item.title} className=\"pt-1 list-none\">\n      {item.url ? <a href={item.url}> {item.title}</a> : <></>}\n      {item.items ? (\n        <ul className=\"pl-3\">{item.items.map(renderSubItem)}</ul>\n      ) : (\n        <></>\n      )}\n    </li>\n  );\n\n  return (\n    <div className=\"relative\" key={mdx.id}>\n      <SEO\n        title={title}\n        keywords={[\n          \"the university of sheffield\",\n          \"data visualisation\",\n          \"data visualisation hub\",\n          \"research\",\n          \"docs\",\n          title,\n          ...(mdx.frontmatter?.tag || []),\n          ...(mdx.frontmatter?.category || [])\n        ]}\n        author={mdx.frontmatter.author.map((a) => a.name).join(\", \")}\n        description={mdx.frontmatter?.description}\n        twitterImage={\n          mdx.frontmatter?.thumbnail?.childImageSharp?.gatsbyImageData\n        }\n        twitterImageAlt={`Thumbnail image for the docs - ${mdx.frontmatter?.title}`}\n      />\n      <Helmet>\n        <script\n          async\n          src=\"https://platform.twitter.com/widgets.js\"\n          charset=\"utf-8\"\n          type=\"text/javascript\"\n        />\n      </Helmet>\n\n      {/* Top background, title and author etc. */}\n      <Fade top delay={300}>\n        <div\n          id=\"headElement\"\n          className=\"flex flex-wrap justify-center self-center content-center items-center m-auto\"\n          style={{ minHeight: \"500px\" }}\n        >\n          <div className=\"flex flex-col flex-wrap text-center text-white pt-24 pb-10\">\n            <div className=\"px-3 lg:px-48 2xl:px-78 leading-tight\">\n              <h1\n                id=\"title\"\n                className=\"text-4xl xl:text-5xl text-gray-800 font-extrabold\"\n              >\n                {title}\n              </h1>\n            </div>\n\n            <div className=\"flex justify-center mt-12 items-center\">\n              {author.map((authors) => (\n                <GatsbyImage\n                  className=\"rounded-full mx-1 h-30px w-30px lg:h-40px lg:w-40px 2xl:h-50px 2xl:w-50px border-1 border-gray-100\"\n                  key={authors.name}\n                  image={authors.avatar.childImageSharp.gatsbyImageData}\n                />\n              ))}\n              <div className=\"inline-block px-2 text-left font-semibold text-gray-800\">\n                <h1 className=\"text-sm xl:text-base\">\n                  {author.map((authors, idx) =>\n                    author.length === idx + 1\n                      ? authors.name\n                      : authors.name + \" · \"\n                  )}\n                </h1>\n                <h1 className=\"text-xs xl:text-sm\">\n                  {date} · {mdx.fields.readingTime.text}\n                </h1>\n              </div>\n            </div>\n            <div\n              className=\"pb-2 border-b-1 border-gray-200 hidden md:block mx-auto mt-16\"\n              style={{ maxWidth: \"1000px\", minWidth: \"400px\" }}\n            ></div>\n          </div>\n        </div>\n      </Fade>\n\n      {/* body */}\n      <div\n        className=\"flex flex-wrap relative pt-10 mx-auto\"\n        style={{ maxWidth: \"1200px\" }}\n      >\n        {/* desktop share buttons && mobile: table of content & share buttons */}\n        <ShareButtons\n          shareLinks={shareLinks}\n          tableOfContent={tableOfContent}\n          renderItem={renderItem}\n        />\n\n        {/******** main mdx content  ***********/}\n        <div\n          className={` ${\n            tableOfContent && tableOfContent.items ? \"mdxBody\" : \"\"\n          } relative mx-auto pt-0 pb-32 px-5 text-lg lg:text-xl`}\n          style={{ color: \"#24292e\", maxWidth: \"700px\" }}\n        >\n          <CommonMdxProvider mdx={mdx} className=\"text-gray-100\" />\n        </div>\n\n        {/* sidebar toc: hidden in mobile */}\n        <div\n          className={` ${\n            tableOfContent && tableOfContent.items ? \"lg:w-2/12 lg:block\" : \"\"\n          } hidden noScrollBar lg:sticky lg:top-0 lg:right-0 pt-10 pb-10 max-h-100 overflow-auto`}\n        >\n          <p\n            className=\"font-bold mb-4 pb-2 text-gray-800 text-lg\"\n            style={{ borderBottom: \"1px solid #eaeaea\" }}\n          >\n            TABLE OF CONTENTS\n          </p>\n          <div className=\"px-1 text-base TOC lg:pb-10\">\n            {tableOfContent &&\n              tableOfContent.items &&\n              tableOfContent.items.map(renderItem)}\n          </div>\n        </div>\n      </div>\n\n      <PostPagination\n        mdx={mdx}\n        prev={prev}\n        next={next}\n        shareLinks={shareLinks}\n        displayTags={false}\n      />\n      <Comment mdx={mdx} />\n    </div>\n  );\n};\n\nexport default docsTemplate;\n\ndocsTemplate.propTypes = {\n  data: PropTypes.any,\n  pageContext: PropTypes.any\n};\n\nexport const docsQuery = graphql`\n  query docsQuery($id: String) {\n    mdx(id: { eq: $id }) {\n      id\n      body\n      tableOfContents\n      fields {\n        ...MdxFields\n        slugOrigin\n      }\n      frontmatter {\n        ...MdxFrontmatter\n        disableTOC\n        d3\n      }\n    }\n  }\n`;\n","/* eslint-disable no-unused-vars */\nimport { useEffect } from \"react\"\n\n/**\n * \n * @param {insert selector for your table of contents elements} tocSelector \n * @param {item are selected in the form of `itemSelector [id]`} itemSelector \n * \n * structure of toc should be :\n * <li>\n *  <a>some heading</a>\n *  <ul>Sub headings\n *    <li><a>sub-heading ONE</a></li>\n *    <li><a>sub-heading TWO</a></li>\n *    ...\n * </ul>\n * </li>\n */\nexport function trackTableOfContent(tocSelector, itemSelector) {\n  \n  function handleClassList(element, tagName, type=\"add\") {\n    if(tagName.substring(0,1) !== \"H\") return;\n    var el = element.parentElement;\n    var rm = (type === \"remove\")\n    \n    rm ? el.classList.remove('active') : el.classList.add('active');\n    \n    if(tagName !== \"H1\") {\n      handleClassList(el.parentElement, `H${tagName.substring(1,) - 1}`, rm ? \"remove\" : \"add\");\n    }\n  }\n\n  useEffect(() => {\n    function handleTOC() {\n      const observer = new IntersectionObserver(entries => {\n        entries.forEach(entry => {\n          var id = entry.target.getAttribute('id');\n          var element = document.querySelector(`${tocSelector}[href=\"#${id}\"]`)\n          if(element === null) return;\n\n          if (entry.intersectionRatio > 0) {\n            handleClassList(element, entry.target.tagName)\n          } else {\n            handleClassList(element, entry.target.tagName, \"remove\")\n          }\n        });\n      });\n    \n      // Track all items\n      document.querySelectorAll(`${itemSelector} [id]`).forEach((item) => {\n        observer.observe(item);\n      });\n    }\n    document.addEventListener('DOMContentLoaded', handleTOC);\n\n    return () => {\n      document.removeEventListener('DOMContentLoaded', handleTOC);\n    }\n  }, [])\n}"],"sourceRoot":""}