name: CI

on:
  push:
    branches-ignore: [ master ]
  pull_request:
    branches: [ '**' ] 
    types: [         
      opened,
      synchronize,
      reopened ]
  workflow_dispatch:
    inputs:
      Name:   
        required: true
        default: 'Re-run the workflow'
      Description:
        default: ''  

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - uses: actions/checkout@v2

      - name: NPM Cache
        id: npm-cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm-cache-
          
      # Retrieve gatsby cache
      # Creates new cache when OS/run_id changes
      - name: Gatsby Cache
        id: gatsby-ci-cache
        uses: actions/cache@v2
        with:
          path: |
            public
            .cache
          key: ${{ runner.os }}-gatsby-ci-${{ github.run_id }} 
          restore-keys: ${{ runner.os }}-gatsby-ci-

      - name: Install playwright dependencies
        uses: microsoft/playwright-github-action@v1

      - name: Install dependencies
        run: npm ci
      
      # Enable incremental build
      - name: Incremental build
        run: npm run build:incremental
        env:
          EVENT_API_KEY_1: ${{ secrets.EVENT_API_KEY_1 }}
          EVENT_API_KEY_2: ${{ secrets.EVENT_API_KEY_2 }}
          EVENT_ORG_ID_1: ${{ secrets.EVENT_ORG_ID_1 }}
          EVENT_ORG_ID_2: ${{ secrets.EVENT_ORG_ID_2 }}
          GA_TRACKING_ID: ${{ secrets.GA_TRACKING_ID }}
          GATSBY_GH_APP_GITALK_ID: ${{ secrets.GATSBY_GH_APP_GITALK_ID }}
          GATSBY_GH_APP_GITALK_SECRET: ${{ secrets.GATSBY_GH_APP_GITALK_SECRET }}
          GATSBY_ENV: ${{ secrets.GATSBY_ENV }}

      - name: Upload production build
        uses: actions/upload-artifact@v2
        with:
          name: production-build-ci
          path: /
  
  E2E-test:
    runs-on: ubuntu-20.04
    steps: 
      - name: Download production build
        uses: actions/download-artifact@v2
        with:
          name: production-build-ci

      - name: Serve and E2E test
        run: npm run serve & npm run test:e2e

